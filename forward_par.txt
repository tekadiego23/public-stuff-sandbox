# eqs/apis/utils_async.py
import asyncio
from fastapi.responses import JSONResponse


async def run_forward_post_request(app, reqJson, requestType, sla_seconds: float = 10.0):
    """
    Exécute forward_post_request (sync) dans le thread pool de l'app.
    Protège l'appel avec un timeout = SLA.
    """
    loop = asyncio.get_running_loop()

    def _sync_call():
        return app.state.forward_post_request(
            reqJson=reqJson,
            requestType=requestType,
            pricer_factory=app.state.get_pricer,
            sla_seconds=sla_seconds,
        )

    return await asyncio.wait_for(
        loop.run_in_executor(app.state.tpool, _sync_call),
        timeout=sla_seconds,
    )


async def run_forward_get_request(app, reqJson, requestType, sla_seconds: float = 10.0):
    """
    Idem pour forward_get_request (sync).
    """
    loop = asyncio.get_running_loop()

    def _sync_call():
        return app.state.forward_get_request(
            reqJson=reqJson,
            requestType=requestType,
            pricer_factory=app.state.get_pricer,
            sla_seconds=sla_seconds,
        )

    return await asyncio.wait_for(
        loop.run_in_executor(app.state.tpool, _sync_call),
        timeout=sla_seconds,
    )
